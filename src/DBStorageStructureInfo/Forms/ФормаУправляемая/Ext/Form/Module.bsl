&НаСервере
Процедура ЗаполнитьТаблицы()
	
	СтруктураБазы = ПолучитьИзВременногоХранилища(АдресСтруктурыБазы);
	
	Если СтруктураБазы = Неопределено Тогда
		
		СтруктураБазы = ПолучитьСтруктуруХраненияБазыДанных();
		ПоместитьВоВременноеХранилище(СтруктураБазы, АдресСтруктурыБазы);
		
	КонецЕсли;
	
	Результат.Очистить();
	Поля.Очистить();
	Индексы.Очистить();
	ПоляИндексов.Очистить();
	
	Если IsRussianScript() Тогда
		
		Для Каждого ТекСтрока Из СтруктураБазы Цикл
			ЗаполнитьЗначенияСвойств(Результат.Добавить(), ТекСтрока);	
			ПоляИзСтруктуры = ТекСтрока.Поля;
			Для Каждого ТекСтрокаПоля Из ПоляИзСтруктуры Цикл
				НоваяСтрока = Поля.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаПоля);
				НоваяСтрока.ИмяТаблицы = ТекСтрока.ИмяТаблицыХранения;
			КонецЦикла; 
			
			ИндексыИзСтруктуры = ТекСтрока.Индексы;
			Для Каждого ТекСтрокаИндексы Из ИндексыИзСтруктуры Цикл
				НоваяСтрока = Индексы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаИндексы);
				НоваяСтрока.ИмяТаблицы = ТекСтрока.ИмяТаблицыХранения;
				
				ПоляИндексовИзСтруктуры = ТекСтрокаИндексы.Поля;
				Для Каждого ТекСтрокаПоляИндексов Из ПоляИндексовИзСтруктуры Цикл
					НоваяСтрока = ПоляИндексов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаПоляИндексов);
					НоваяСтрока.ИмяИндексаХранения = ТекСтрокаИндексы.ИмяИндексаХранения;
					НоваяСтрока.ИмяТаблицы = ТекСтрока.ИмяТаблицыХранения;
				КонецЦикла; 
				
			КонецЦикла; 	
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого ТекСтрока Из СтруктураБазы Цикл
			НоваяСтрока = Результат.Добавить();
			НоваяСтрока.ИмяТаблицы = ТекСтрока.TableName;
			НоваяСтрока.Метаданные = ТекСтрока.Metadata;
			НоваяСтрока.Назначение = ТекСтрока.Purpose;
			НоваяСтрока.ИмяТаблицыХранения = ТекСтрока.StorageTableName;
			
			ПоляИзСтруктуры = ТекСтрока.Fields;
			Для Каждого ТекСтрокаПоля Из ПоляИзСтруктуры Цикл
				НоваяСтрока = Поля.Добавить();
				НоваяСтрока.ИмяПоляХранения = ТекСтрокаПоля.StorageFieldName;
				НоваяСтрока.Метаданные = ТекСтрокаПоля.Metadata;
				НоваяСтрока.ИмяПоля = ТекСтрокаПоля.FieldName;
				НоваяСтрока.ИмяТаблицы = ТекСтрока.StorageTableName;
			КонецЦикла; 
			
			ИндексыИзСтруктуры = ТекСтрока.Indexes;
			Для Каждого ТекСтрокаИндексы Из ИндексыИзСтруктуры Цикл
				НоваяСтрока = Индексы.Добавить();
				НоваяСтрока.ИмяИндексаХранения = ТекСтрокаИндексы.StorageIndexName;
				НоваяСтрока.ИмяТаблицы = ТекСтрока.StorageTableName;
				ПоляИндексовИзСтруктуры = ТекСтрокаИндексы.Fields;
				Для Каждого ТекСтрокаПоляИндексов Из ПоляИндексовИзСтруктуры Цикл
					НоваяСтрока = ПоляИндексов.Добавить();
					НоваяСтрока.ИмяПоляХранения = ТекСтрокаПоляИндексов.StorageFieldName;
					НоваяСтрока.Метаданные = ТекСтрокаПоляИндексов.Metadata;
					НоваяСтрока.ИмяПоля = ТекСтрокаПоляИндексов.FieldName;
					НоваяСтрока.ИмяТаблицы = ТекСтрока.StorageTableName;
					НоваяСтрока.ИмяИндексаХранения = ТекСтрокаИндексы.StorageIndexName;
					НоваяСтрока.ИмяТаблицы = ТекСтрока.StorageTableName;
				КонецЦикла; 
				
			КонецЦикла; 	
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура НайтиПоИмениТаблицыХранения()
	
	СтруктураБазы = ПолучитьИзВременногоХранилища(АдресСтруктурыБазы);
	
	ИмяДляПоиска = ВРЕГ(СокрЛП(ИмяТаблицыХранения));
	Если Лев(ИмяДляПоиска, 1) = "_" Тогда
		ИмяДляПоиска = Сред(ИмяДляПоиска, 2);
	КонецЕсли;
	НайденныеСтроки = Новый Массив();
	
	Результат.Очистить();			
	
	Если IsRussianScript() Тогда
		Для каждого Строка из СтруктураБазы Цикл
			Если Найти(ВРЕГ(Строка.ИмяТаблицыХранения), ИмяДляПоиска) > 0 
				ИЛИ Найти(ВРЕГ(Строка.ИмяТаблицы), ИмяДляПоиска)
				ИЛИ Найти(ВРЕГ(Строка.Метаданные), ИмяДляПоиска)
				ИЛИ Найти(ВРЕГ(Строка.Назначение), ИмяДляПоиска) Тогда
				НайденныеСтроки.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;
		
		Для каждого Строка из НайденныеСтроки Цикл
			ЗаполнитьЗначенияСвойств(Результат.Добавить(), Строка);
		КонецЦикла;
		
	Иначе
		Для каждого Строка из СтруктураБазы Цикл
			Если Найти(ВРЕГ(Строка.StorageTableName), ИмяДляПоиска) > 0 
				ИЛИ Найти(ВРЕГ(Строка.TableName), ИмяДляПоиска)
				ИЛИ Найти(ВРЕГ(Строка.Metadata), ИмяДляПоиска)
				ИЛИ Найти(ВРЕГ(Строка.Purpose), ИмяДляПоиска) Тогда
				НайденныеСтроки.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;	
		
		Для каждого Строка из НайденныеСтроки Цикл
			НоваяСтрока = Результат.Добавить();
			НоваяСтрока.ИмяТаблицы = Строка.TableName;
			НоваяСтрока.Метаданные = Строка.Metadata;
			НоваяСтрока.Назначение = Строка.Purpose;
			НоваяСтрока.ИмяТаблицыХранения = Строка.StorageTableName;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбор(Команда)
	НайтиПоИмениТаблицыХранения();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресСтруктурыБазы = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	ЗаполнитьТаблицы();
	
КонецПроцедуры
 
&НаКлиенте
Процедура РезультатПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.Результат.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтборСтрок = Новый ФиксированнаяСтруктура("ИмяТаблицы", ТекДанные.ИмяТаблицыХранения);

	Элементы.Поля.ОтборСтрок = ОтборСтрок;
	Элементы.Индексы.ОтборСтрок = ОтборСтрок;

КонецПроцедуры

&НаКлиенте
Процедура ИндексыПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.Индексы.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	ОтборСтрок = Новый ФиксированнаяСтруктура("ИмяИндексаХранения, ИмяТаблицы", ТекДанные.ИмяИндексаХранения, ТекДанные.ИмяТаблицы);
	
	Элементы.ПоляИндексов.ОтборСтрок = ОтборСтрок;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяТаблицыХраненияОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИмяТаблицыХранения = Текст;
	
	Если ПустаяСтрока(ИмяТаблицыХранения) Тогда
		
		ЗаполнитьТаблицы();
		
	Иначе
		
		НайтиПоИмениТаблицыХранения();		
		
	КонецЕсли;
		
КонецПроцедуры

//&НаСервере
//Procedure LoadFromTXTFile(Params, StorageAddress = Undefined) Export
//	
//	AttendanceTable = ProcessTXTFile(Params, StorageAddress);
//	
//	If AttendanceTable <> Undefined  Then
//		BeginTransaction();
//		FillTimesheetFromTXTFileData(AttendanceTable, Params);
//		CommitTransaction();		
//	EndIf; 
//	
//EndProcedure

Function IsRussianScript()
	Return String(Metadata.ScriptVariant) = "Русский";		
EndFunction 
 
